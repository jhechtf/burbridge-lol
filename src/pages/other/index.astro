---
import { getCollection } from "astro:content";
import Main from "../../layouts/main.astro";

const stories = await getCollection("other", (f) => {
  return import.meta.env.NODE_ENV !== "production" || !f.data.draft;
});

const storyMaps = stories.reduce((all, cur) => {
  for(const tag of cur.data.tags) {
    let mapped = all.get(tag);
    if (mapped === undefined) {
      mapped = [];
      all.set(tag, mapped);
    }
    mapped.push(cur);
  }
  return all;
}, new Map<string, typeof stories>());

---
<Main title="Other Pieces">
  <div class="p-4 col-span-12 @lg/main:col-span-6 @lg/main:col-start-3 space-y-4">
    <h1 class="mt-4 col-span-12">Other stories</h1>
    <p class="lead">
      Sometimes I write things that aren't exactly blogs or stories. This is
      where those pieces will live.
    </p>
    {
      stories.length === 0 && (
        <div>No other pieces exist at this moment in time</div>
      )
    }
    {
      stories.length > 0 && (
        <div class="space-y-5">
          {stories.map((story) => (
            <h3 class="bg-slate-800 p-4 rounded-md">
              <a href={`/other/${story.id}`}>
                {story.data.title}
              </a>
            </h3>
          ))}
        </div>
      )
    }
  </div>
  <aside class="p-4 @lg/main:col-span-2 @lg/main:pl-8">
    <h3 class="mt-8 mb-4">
      By Tags
    </h3>

    <div class="flex justify-start flex-wrap gap-2">
      {
        Array.from(storyMaps.keys())
          .map(k => (
            <div class="pill px-2 py-1 border rounded capitalize">
              <a href={`?tag=${k}`}>
                {k}
              </a>
            </div>
          ))
      }
    </div>
  </aside>
</Main>
